{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/providers/query.tsx"],"sourcesContent":["'use client';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport type { FC, ReactNode } from 'react';\nimport { useState } from 'react';\n\ninterface QueryProviderProps {\n  children: ReactNode;\n}\n\nconst QueryProvider: FC<QueryProviderProps> = ({ children }) => {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            refetchOnWindowFocus: false,\n            retry: 2,\n            gcTime: 300000, // Cache data for 5 minutes (in milliseconds)\n            staleTime: 120000, // Keep stale data for 2 minutes (in milliseconds)\n            retryDelay: attemptIndex =>\n              Math.min(1000 * 2 ** attemptIndex, 30000), // Retry after 1 second, then 2, 4, 8, 16, 32, 64 seconds, etc...\n          },\n        },\n      })\n  );\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n};\n\nexport { QueryProvider };\n"],"names":[],"mappings":";;;;AAKA;AAHA;AAAA;AACA;;;AAHA;;;;AAWA,MAAM,gBAAwC,CAAC,EAAE,QAAQ,EAAE;;IACzD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAC3B,IACE,IAAI,gLAAA,CAAA,cAAW,CAAC;YACd,gBAAgB;gBACd,SAAS;oBACP,sBAAsB;oBACtB,OAAO;oBACP,QAAQ;oBACR,WAAW;oBACX,YAAY,CAAA,eACV,KAAK,GAAG,CAAC,OAAO,KAAK,cAAc;gBACvC;YACF;QACF;IAGJ,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;;YAC1B;0BACD,6LAAC,uLAAA,CAAA,qBAAkB;gBAAC,eAAe;;;;;;;;;;;;AAGzC;GAvBM;KAAA"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}